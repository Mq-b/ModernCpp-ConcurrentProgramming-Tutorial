import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as c,o as r}from"./app-DWsqdsXW.js";const a={};function n(d,e){return r(),t("div",null,[...e[0]||(e[0]=[c('<h1 id="协程" tabindex="-1"><a class="header-anchor" href="#协程"><span>协程</span></a></h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>既然是“<strong>现代</strong>” C++ 并发编程教程，怎么能不聊协程呢？</p><p>C++20 引入了协程语法，新增了三个用作协程的关键字：<code>co_await</code>、<code>co_yield</code>、<code>co_return</code>。但并未给出标准<strong>协程库</strong>，协程库在 C++23 被引入。</p><p>希望您拥有 <code>gcc14</code>、<code>clang19</code>，<code>Visual Studio 2022 17.11</code>。</p><p>我们假设您对 C++20 的协程一无所知、假设您对协程这个概念一无所知、假设您不了解其它语言的协程实现（如 Python、java）。</p><hr><p>绝大多数人对协程基本可以说是一无所知，但是应该都听过这个名字，大概是因为这些编程语言都在新版本中引入它作为核心语言特性。</p><p>这带来了许多的热度，不过这并不完全算是好事，许多的营销号一样的讲述，基本全部都是错误的。</p><p>据我所知，在我在 B站发布正经 C++20 协程的教学视频之前，几乎所有打着 C++ 旗号说什么协程的，都是胡言乱语。不过也有一些不错的，如：<a href="https://space.bilibili.com/35186937" target="_blank" rel="noopener noreferrer"><strong>等疾风</strong></a>、<a href="https://space.bilibili.com/312883756" target="_blank" rel="noopener noreferrer"><strong>happyyang的百草园</strong></a>，都出过至少算作正经的 C++20 协程的教学视频。</p><ul><li><strong>C++20 的协程是复杂的</strong>。</li></ul><p>不管是使用上还是概念上，引入了许多新颖的做法。</p>',12)])])}const p=o(a,[["render",n],["__file","06协程.html.vue"]]),l=JSON.parse('{"path":"/md/06%E5%8D%8F%E7%A8%8B.html","title":"协程","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]}],"git":{"createdTime":1715425898000,"updatedTime":1728802094000,"contributors":[{"name":"mq白","email":"3326284481@qq.com","commits":2},{"name":"归故里","email":"3326284481@qq.com","commits":1}]},"readingTime":{"minutes":1.13,"words":339},"filePathRelative":"md/06协程.md","localizedDate":"2024年5月11日","excerpt":"\\n<h2>前言</h2>\\n<p>既然是“<strong>现代</strong>” C++ 并发编程教程，怎么能不聊协程呢？</p>\\n<p>C++20 引入了协程语法，新增了三个用作协程的关键字：<code>co_await</code>、<code>co_yield</code>、<code>co_return</code>。但并未给出标准<strong>协程库</strong>，协程库在 C++23 被引入。</p>\\n<p>希望您拥有 <code>gcc14</code>、<code>clang19</code>，<code>Visual Studio 2022 17.11</code>。</p>"}');export{p as comp,l as data};
